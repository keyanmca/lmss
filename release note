17:56 2015/7/19
1. 修复idle_streams功能, publisher没上来的时候, 间隔5秒查一次redis

18:02 2015/7/14
1. 增加全局stat监控
2. 增加白名单功能
3. 增加HLS绑定RTMP模块
4. 增加对HLS客户端的监控
5. 增加HLS回源鉴权

13:48 2015/3/17
1 增加了对idleStreams的支持。
2 修改了auto_pull_type为relay_type。需要修改lua脚本中的变量autopulltype为relaytype即可。

17:17 2015/3/5
1 增加了对推流实际码率的展示，便于网络检测。
---------------------------------
9:09 2015/1/30
1 完成了auto_pull的代码测试，但未做优化，进程间有可能会多级pull。

21:42 2015/1/30
1 处理进程间多级Pull的问题，未解决。

0:07 2015/2/2
1 解决2进程之间AutoPull问题。在ngx_trylock_accept_mutex中进行处理。
2 未测试多级Pull的问题。

11:44 2015/2/9
1 通过redis实现了进程间的auto_pull。
需要解决的问题：
1 当一个连接断开时，不能关闭当前的auto_pull连接。
2 reids返回值如果加到http中。
3 解决源的IP，决定是否需要进行回源。

11:30 2015/2/13
1 解决BUG：一个连接断开时，不能关闭当前的auto_pull连接。
2 redis返回值已经可以成功返回http body中。
3 实现多IP的autopull。
未解决问题：
1 同一IP上，如果多进程中，有进程已经回源，其它进程直接从该回源进行进行取流的问题。（Redis返回值进行解决）

14:49 2015/2/13
1 修改了从tcurl中取app长度时计算错误的bug。
未解决问题
2 内部回源不需要进行验证的问题。

16:02 2015/2/15
1 增加了多进程的Pull，OnPublishDone时的删除。
未解决问题
1 进程内部回源时，关闭第一个链接，会删除Publish的Session，需要检查ngx_rtmp_relay_create时，为什么没有挂到play_ctx->next上。

22:09 2015/2/16
1 解决了关闭第一链接时，会删除Publish的Session的问题，因为AutoPull和AutoPush没有区分，在ngx_rtmp_init_connection中，只要是文件Socket，便把 s->auto_pushed = unix_socket,而在
ngx_rtmp_notify_play函数中
    if (s->auto_pushed) {
        goto next;
    }
直接next。
2 重新整理了OnPlay中IP和Slot的处理逻辑。
未解决问题
1 考虑把IP和Slot的保存分开，IP保存独立服务器上，Slot保存在本机上。
2 考虑信息的时效性，需要定期检查，否则会导致Redis中保存无效的信息。


0:35 2015/3/3
1 增加了定时Update。
2 Notify处理全部改为Lua。

20:19 2015/3/4
1 解决Update时CoreDump的问题，屏蔽ngx_rtmp_notify_play函数中对ngx_rtmp_notify_init的调用。
2 需要分析原来的：
  //if (s->auto_pushed) {
    //    goto next;
    //}
  为什么在这里直接next。

10:50 2015/3/5
1 完成多IP多进程的测试。

